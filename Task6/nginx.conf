http {
    # Настройка Rate Limiting - максимум 10 запросов в минуту
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/m;
    
    # Настройка upstream для балансировки нагрузки
    upstream backend_servers {
        server backend1.example.com;
        server backend2.example.com;
        server backend3.example.com;
    }

    server {
        listen 80;

        location / {
            # Применение Rate Limiting с burst буфером
            limit_req zone=api_limit burst=5 nodelay;
            limit_req_status 429;
            
            # Проксирование к backend серверам
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Кастомная страница ошибки для 429
        error_page 429 @rate_limit_exceeded;
        
        location @rate_limit_exceeded {
            add_header Content-Type application/json always;
            return 429 '{"error": "Rate limit exceeded", "message": "Maximum 10 requests per minute allowed", "retry_after": 60}';
        }
    }
} 